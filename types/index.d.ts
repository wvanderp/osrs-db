// AUTO-GENERATED FILE. DO NOT EDIT.
// Generated by: npm tsx scripts/generate-types.ts

// This file provides TypeScript definitions for JSON data imports.
// Consumers must have "resolveJsonModule": true in their tsconfig.json
declare module "osrs-db/data/cache-number.json" {
  /** Generated from schema: tools/CacheNumber/cache-number.schema.json */
  export type Cachenumber = {
    readonly cacheID: number;
  };

  const data: Readonly<Cachenumber>;
  export default data;
}

declare module "osrs-db/data/items.g.json" {
  /** Generated from schema: tools/Items/items.schema.json */
  export type Items = {
    readonly id?: number;
    readonly name?: string;
    readonly examine?: string;
    readonly resizeX?: number;
    readonly resizeY?: number;
    readonly resizeZ?: number;
    readonly xan2d?: number;
    readonly yan2d?: number;
    readonly zan2d?: number;
    readonly cost?: number;
    readonly isTradeable?: boolean;
    readonly stackable?: 0 | 1;
    readonly inventoryModel?: number;
    readonly wearPos1?: number;
    readonly wearPos2?: number;
    readonly wearPos3?: number;
    readonly members?: boolean;
    readonly textureFind?: ReadonlyArray<number>;
    readonly textureReplace?: ReadonlyArray<number>;
    readonly colorFind?: ReadonlyArray<number>;
    readonly colorReplace?: ReadonlyArray<number>;
    readonly zoom2d?: number;
    readonly xOffset2d?: number;
    readonly yOffset2d?: number;
    readonly ambient?: number;
    readonly contrast?: number;
    readonly countCo?: ReadonlyArray<number>;
    readonly countObj?: ReadonlyArray<number>;
    readonly options?: ReadonlyArray<string | null>;
    readonly interfaceOptions?: ReadonlyArray<string | null>;
    readonly subops?: ReadonlyArray<unknown[] | null>;
    readonly maleModel0?: number;
    readonly maleModel1?: number;
    readonly maleModel2?: number;
    readonly maleOffset?: number;
    readonly maleHeadModel?: number;
    readonly maleHeadModel2?: number;
    readonly femaleModel0?: number;
    readonly femaleModel1?: number;
    readonly femaleModel2?: number;
    readonly femaleOffset?: number;
    readonly femaleHeadModel?: number;
    readonly femaleHeadModel2?: number;
    readonly category?: number;
    readonly notedID?: number;
    readonly notedTemplate?: number;
    readonly team?: number;
    readonly weight?: number;
    readonly shiftClickDropIndex?: number;
    readonly boughtId?: number;
    readonly boughtTemplateId?: number;
    readonly placeholderId?: number;
    readonly placeholderTemplateId?: number;
    readonly params?: {
    readonly [key: string]: string | number;
  };
  };

  const data: ReadonlyArray<Items>;
  export default data;
}

declare module "osrs-db/data/npcs.g.json" {
  /** Generated from schema: tools/Npcs/npcs.schema.json */
  export type Npcs = {
    readonly id: number;
    readonly name: string;
    readonly examine?: string | null;
    readonly size?: number | null;
    readonly combatLevel?: number | null;
    readonly attackSpeed?: number | null;
    readonly aggressive?: boolean | null;
    readonly poisonous?: boolean | null;
    readonly immuneToPoison?: boolean | null;
    readonly immuneToVenom?: boolean | null;
    readonly options?: unknown[] | null;
    readonly hitpoints?: number | null;
    readonly attributes?: Record<string, unknown> | null;
    readonly animations?: Record<string, unknown> | null;
    readonly params?: Record<string, unknown> | null;
    readonly [key: string]: unknown;
  };

  const data: ReadonlyArray<Npcs>;
  export default data;
}

declare module "osrs-db/data/objects.g.json" {
  /** Generated from schema: tools/Objects/objects.schema.json */
  export type Objects = {
    readonly id: number;
    readonly name: string;
    readonly examine?: string | null;
    readonly interactions?: unknown[] | null;
    readonly x?: number | null;
    readonly y?: number | null;
    readonly plane?: number | null;
    readonly type?: number | null;
    readonly width?: number | null;
    readonly length?: number | null;
    readonly impenetrable?: boolean | null;
    readonly clipType?: number | null;
    readonly offsetX?: number | null;
    readonly offsetY?: number | null;
    readonly offsetHeight?: number | null;
    readonly ambient?: number | null;
    readonly contrast?: number | null;
    readonly params?: Record<string, unknown> | null;
    readonly [key: string]: unknown;
  };

  const data: ReadonlyArray<Objects>;
  export default data;
}

declare module "osrs-db/data/quests.g.json" {
  /** Generated from schema: tools/Quests/quests.schema.json */
  export type Quests = {
    readonly id: number;
    readonly enum: string;
    readonly name: string;
  };

  const data: ReadonlyArray<Quests>;
  export default data;
}

declare module "osrs-db/data/skills.g.json" {
  /** Generated from schema: tools/Skills/skills.schema.json */
  export type Skills = "Attack" | "Cooking" | "Crafting" | "Defence" | "Firemaking" | "Fishing" | "Hitpoints" | "Magic" | "Mining" | "Prayer" | "Ranged" | "Runecrafting" | "Smithing" | "Strength" | "Woodcutting" | "Agility" | "Construction" | "Farming" | "Fletching" | "Herblore" | "Hunter" | "Slayer" | "Thieving";

  const data: ReadonlyArray<Skills>;
  export default data;
}

declare module "osrs-db/data/slotStats.g.json" {
  /** Generated from schema: tools/Items/slotStats.schema.json */
  export type Slotstats = {
    readonly id: number | null;
    readonly name: string;
    readonly members: boolean;
    readonly stabAttack: number;
    readonly slashAttack: number;
    readonly crushAttack: number;
    readonly magicAttack: number;
    readonly rangedAttack: number;
    readonly stabDefence: number;
    readonly slashDefence: number;
    readonly crushDefence: number;
    readonly magicDefence: number;
    readonly rangedDefence: number;
    readonly strengthBonus: number;
    readonly rangedStrength: number;
    readonly magicDamage: number;
    readonly prayerBonus: number;
    readonly weight: number;
    readonly speed?: number | null;
    readonly slot: "Ammunition" | "Body" | "Cape" | "Feet" | "Hands" | "Head" | "Legs" | "Neck" | "Ring" | "Shield" | "Weapon" | "Two-handed";
  };

  const data: ReadonlyArray<Slotstats>;
  export default data;
}
